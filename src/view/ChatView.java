/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import chat.Cliente;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ChatView extends javax.swing.JFrame {
    Cliente c;
    private DefaultTableModel dtmUsuario;
    
    public javax.swing.JTextArea getTxtMensagem() {
        return txtMensagem;
    }
    public void setTxtMensagem(javax.swing.JTextArea txtMensagem) {
        this.txtMensagem = txtMensagem;
    }
    public javax.swing.JTextArea getTxtMensagens() {
        return txtMensagens;
    }
    public void setTxtMensagens(javax.swing.JTextArea txtMensagens) {
        this.txtMensagens = txtMensagens;
    }
    /**
     * Creates new form ClienteGrafico
     * @param c
     * @param usuario
     */
    public ChatView(Cliente c) throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.c = c;
        rTodos.setSelected(true);
        dtmUsuario = (DefaultTableModel) jtUsuarios.getModel();
        
    }
    public ChatView() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensagens = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMensagem = new javax.swing.JTextArea();
        btnEnviar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rPrivado = new javax.swing.JRadioButton();
        rTodos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Cliente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        txtMensagens.setColumns(20);
        txtMensagens.setRows(5);
        txtMensagens.setFocusable(false);
        jScrollPane1.setViewportView(txtMensagens);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtMensagem.setColumns(20);
        txtMensagem.setRows(5);
        txtMensagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMensagemKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtMensagem);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jtUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "IP", "Porta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtUsuarios);

        jLabel1.setText("Mensagens");

        jLabel2.setText("Enviar:");

        rPrivado.setText("Privado");
        rPrivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rPrivadoActionPerformed(evt);
            }
        });

        rTodos.setText("Todos");
        rTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rPrivado)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(rPrivado)
                        .addComponent(rTodos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        
        try {
            c.desconectar();
            c.interrupt();
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(ChatView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtMensagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMensagemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            enviar();
            evt.consume();
        }
    }//GEN-LAST:event_txtMensagemKeyPressed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:
        enviar();
    }//GEN-LAST:event_btnEnviarActionPerformed
    private void enviar(){
        try{
            if(txtMensagem.getText()!=null&&!txtMensagem.getText().equals("")){
                String msg = "3#";
                if (rTodos.isSelected()) {
                    msg += "999.999.999.999#99999#"+txtMensagem.getText();
                    c.enviarMensagem(msg);
                    txtMensagem.setText("");
                } else if(rPrivado.isSelected() && (jtUsuarios.getSelectedRow()!=-1)){
                    String u = jtUsuarios.getValueAt(jtUsuarios.getSelectedRow(), 0).toString();
                    if(!u.equals(c.getUsuario()))
                        txtMensagens.append(c.getUsuario()+" disse para "+u+": "+txtMensagem.getText()+"\n");
                    msg += jtUsuarios.getValueAt(jtUsuarios.getSelectedRow(),1)+"#"+jtUsuarios.getValueAt(jtUsuarios.getSelectedRow(),2)+"#"+txtMensagem.getText();
                    c.enviarMensagem(msg);
                    txtMensagem.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Escolha um usuário", "Atenção", JOptionPane.WARNING_MESSAGE);
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "Mensagem vazia!", "Atenção", JOptionPane.WARNING_MESSAGE);

            }    
        } catch (IOException | HeadlessException e){
            e.printStackTrace();
        }
    }
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            c.desconectar();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Falha na conexão!", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_formWindowClosed

    private void rPrivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rPrivadoActionPerformed
        // TODO add your handling code here:
        rTodos.setSelected(false);
    }//GEN-LAST:event_rPrivadoActionPerformed

    private void rTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rTodosActionPerformed
        // TODO add your handling code here:
        rPrivado.setSelected(false);
    }//GEN-LAST:event_rTodosActionPerformed
   
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jtUsuarios;
    private javax.swing.JRadioButton rPrivado;
    private javax.swing.JRadioButton rTodos;
    private javax.swing.JTextArea txtMensagem;
    private javax.swing.JTextArea txtMensagens;
    // End of variables declaration//GEN-END:variables

   

    /**
     * @return the c
     */
    public Cliente getC() {
        return c;
    }

    /**
     * @param c the c to set
     */
    public void setC(Cliente c) {
        this.c = c;
    }

    
    public void atualizarMensasgens(String string) {
        this.txtMensagens.append(string+"\n");
    }

    /**
     * @return the dtmUsuario
     */
    public DefaultTableModel getDtmUsuario() {
        return dtmUsuario;
    }

    /**
     * @param dtmUsuario the dtmUsuario to set
     */
    public void setDtmUsuario(DefaultTableModel dtmUsuario) {
        this.dtmUsuario = dtmUsuario;
    }

    
}

